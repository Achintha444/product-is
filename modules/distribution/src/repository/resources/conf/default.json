{
  "realm_manager": {
    "properties": {
      "isCascadeDeleteEnabled": true,
      "initializeNewClaimManager": true
    }
  },

  "identity.datasource": "jdbc/WSO2IdentityDB",
  "identity.auth_framework.proxy_mode": "smart",
  "identity.auth_framework.login_page_url": "/authenticationendpoint/login.do",
  "identity.auth_framework.retry_page_url": "/authenticationendpoint/retry.do",
  "identity.auth_framework.request_claim_page_url": "/authenticationendpoint/claims.do",
  "identity.auth_framework.request_coordinator": "org.wso2.carbon.identity.application.authentication.framework.handler.request.impl.DefaultRequestCoordinator",
  "identity.auth_framework.auth_request_handler": "org.wso2.carbon.identity.application.authentication.framework.handler.request.impl.DefaultAuthenticationRequestHandler",
  "identity.auth_framework.logout_request_handler": "org.wso2.carbon.identity.application.authentication.framework.handler.request.impl.DefaultLogoutRequestHandler",
  "identity.auth_framework.step_based_sequence_handler": "org.wso2.carbon.identity.application.authentication.framework.handler.sequence.impl.GraphBasedSequenceHandler",
  "identity.auth_framework.request_path_based_sequence_handler": "org.wso2.carbon.identity.application.authentication.framework.handler.sequence.impl.DefaultRequestPathBasedSequenceHandler",
  "identity.auth_framework.step_handler": "org.wso2.carbon.identity.application.authentication.framework.handler.step.impl.GraphBasedStepHandler",
  "identity.auth_framework.home_realm_discoverer": "org.wso2.carbon.identity.application.authentication.framework.handler.hrd.impl.DefaultHomeRealmDiscoverer",
  "identity.auth_framework.claim_handler": "org.wso2.carbon.identity.application.authentication.framework.handler.claims.impl.DefaultClaimHandler",
  "identity.auth_framework.provisioning_handler": "org.wso2.carbon.identity.application.authentication.framework.handler.provisioning.impl.DefaultProvisioningHandler",
  "identity.auth_framework.authenticators": [
    {
      "name": "BasicAuthenticator",
      "alias": "basic",
      "parameters": {
        "AuthMechanism": "basic"
      }
    },
    {
      "name": "OAuthRequestPathAuthenticator",
      "alias": "oauth-bearer"
    },
    {
      "name": "IWAAuthenticator",
      "alias": "iwa"
    },
    {
      "name": "SAMLSSOAuthenticator",
      "alias": "samlsso"
    },
    {
      "name": "OpenIDConnectAuthenticator",
      "alias": "openidconnect"
    },
    {
      "name": "PassiveSTSAuthenticator",
      "alias": "passive-sts"
    },
    {
      "name": "BasicAuthRequestPathAuthenticator",
      "alias": "basic-auth",
      "parameters": {
        "AuthMechanism": "basic"
      }
    },
    {
      "name": "IdentifierExecutor",
      "parameters": {
        "ValidateUsername": "false"
      }
    },
    {
      "name": "FIDOAuthenticator",
      "parameters": {
        "FidoAuth": "/authenticationendpoint/fido-auth.jsp"
      }
    },
    {
      "name": "GoogleOIDCAuthenticator",
      "parameters": {
        "GoogleTokenEndpoint": "https://accounts.google.com/o/oauth2/token",
        "GoogleAuthzEndpoint": "https://accounts.google.com/o/oauth2/auth",
        "GoogleUserInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo"
      }
    },
    {
      "name": "MicrosoftWindowsLive",
      "parameters": {
        "AuthTokenEndpoint": "https://login.live.com/oauth20_token.srf",
        "AuthnEndpoint": "https://login.live.com/oauth20_authorize.srf",
        "UserInfoEndpoint": "https://apis.live.net/v5.0/me?access_token="
      }
    },
    {
      "name": "FacebookAuthenticator",
      "parameters": {
        "AuthTokenEndpoint": "https://graph.facebook.com/oauth/access_token",
        "AuthnEndpoint": "http://www.facebook.com/dialog/oauth",
        "UserInfoEndpoint": "https://graph.facebook.com/me"
      }
    },
    {
      "name": "YahooOAuth2Authenticator",
      "parameters": {
        "YahooTokenEndpoint": "https://api.login.yahoo.com/oauth2/get_token",
        "YahooOAuthzEndpoint": "https://api.login.yahoo.com/oauth2/request_auth",
        "YahooUserInfoEndpoint": "https://social.yahooapis.com/v1/user/"
      }
    },
    {
      "name": "MobileConnectAuthenticator",
      "parameters": {
        "MCAuthenticationEndpointURL": "mobileconnectauthenticationendpoint/mobileconnect.jsp",
        "MCDiscoveryAPIURL": "https://discover.mobileconnect.io/gsma/v2/discovery/",
        "redirectToMultiOptionPageOnFailure": "false"
      }
    },
    {
      "name": "EmailOTP",
      "parameters": {
        "GmailClientId": "gmailClientIdValue",
        "GmailClientSecret": "gmailClientSecretValue",
        "SendgridAPIKey": "sendgridAPIKeyValue",
        "GmailRefreshToken": "gmailRefreshTokenValue",
        "GmailEmailEndpoint": "https://www.googleapis.com/gmail/v1/users/[userId]/messages/send",
        "SendgridEmailEndpoint": "https://api.sendgrid.com/api/mail.send.json",
        "accessTokenRequiredAPIs": "Gmail",
        "apiKeyHeaderRequiredAPIs": "Sendgrid",
        "SendgridFormData": "sendgridFormDataValue",
        "SendgridURLParams": "sendgridURLParamsValue",
        "GmailAuthTokenType": "Bearer",
        "GmailTokenEndpoint": "https://www.googleapis.com/oauth2/v3/token",
        "SendgridAuthTokenType": "Bearer",
        "redirectToMultiOptionPageOnFailure": false
      }
    },
    {
      "name": "SMSOTP",
      "parameters": {
        "SMSOTPAuthenticationEndpointURL": "smsotpauthenticationendpoint/smsotp.jsp",
        "SMSOTPAuthenticationEndpointErrorPage": "smsotpauthenticationendpoint/smsotpError.jsp",
        "MobileNumberRegPage": "smsotpauthenticationendpoint/mobile.jsp",
        "RetryEnable": true,
        "ResendEnable": true,
        "BackupCode": true,
        "SMSOTPEnableByUserClaim": true,
        "SMSOTPMandatory": false,
        "CaptureAndUpdateMobileNumber": true,
        "SendOTPDirectlyToMobile": false,
        "redirectToMultiOptionPageOnFailure": false
      }
    },
    {
      "name": "x509CertificateAuthenticator",
      "parameters": {
        "AuthenticationEndpoint": "https://localhost:8443/x509-certificate-servlet",
        "username": "CN"
      }
    }
  ],
  "identity.auth_framework.outbound_query_parameter_filter_policy" : "exclude",
  "identity.auth_framework.filtered_outbound_query_parameters": ["username","password","SAMLRequest"],
  "identity.auth_framework.redirect_parameter_filter_policy" : "exclude",
  "identity.auth_framework.redirect_parameter_remove_on_consume" : true,
  "identity.auth_framework.filtered_redirect_parameters": ["loggedInUser"],


  "identity.recaptcha.enabled" : false,
  "identity.recaptcha.api_url" : "https://www.google.com/recaptcha/api.js",
  "identity.recaptcha.verify_url" : "https://www.google.com/recaptcha/api/siteverify",


  "charon.properties.user_schema_extension.enabled": true,
  "charon.properties.bulk_operations.max": "1000",
  "charon.properties.bulk_payload_size.max": "1048576",
  "charon.properties.documentation_uri": "https://docs.wso2.com/display/IS570/apidocs/SCIM2-endpoints/index.html",
  "charon.primary_authentication_scheme": "oauthbearertoken",
  "charon.authentication_schemes.oauth_bearer.documentationUri": "$ref{charon.properties.documentation_uri}",
  "charon.authentication_schemes.http_basic.documentationUri": "$ref{charon.properties.documentation_uri}",


  "identity.auth_framework.endpoint.tenant_list_enabled" : false,
  "identity.auth_framework.endpoint.mutual_ssl_manager_enabled" : true,



  "identity.entitlement.policy_point.pdp.enabled": false,
  "identity.entitlement.policy_point.pdp.default_caching_interval": "300",
  "identity.entitlement.policy_point.pdp.caching.decision_caching.enabled": true,
  "identity.entitlement.policy_point.pdp.caching.decision_caching.caching_interval": "$ref{identity.entitlement.policy_point.pdp.default_caching_interval}",
  "identity.entitlement.policy_point.pdp.caching.attribute_caching.enabled": true,
  "identity.entitlement.policy_point.pdp.caching.attribute_caching.caching_interval": "$ref{identity.entitlement.policy_point.pdp.default_caching_interval}",
  "identity.entitlement.policy_point.pdp.caching.resource_caching.enabled": true,
  "identity.entitlement.policy_point.pdp.caching.resource_caching.caching_interval": "$ref{identity.entitlement.policy_point.pdp.default_caching_interval}",
  "identity.entitlement.policy_point.pdp.caching.policy_caching.caching_interval": "100",
  "identity.entitlement.policy_point.pdp.schema_validation_enabled": true,
  "identity.entitlement.policy_point.pdp.balana_config_enabled": true,
  "identity.entitlement.policy_point.pdp.multiple_decision_profile_enabled": true,
  "identity.entitlement.policy_point.pdp.global_policy_combining_algorithm": "urn:oasis:names:tc:xacml:3.0:policy-combining-algorithm:deny-overrides",
  "identity.entitlement.policy_point.pdp.registry_level_policy_cache_clear": false,
  "identity.entitlement.policy_point.pdp.reference_max_policy_entries": "3000",
  "identity.entitlement.policy_point.pdp.policy_finders": [
    "org.wso2.carbon.identity.entitlement.policy.store.RegistryPolicyStoreManageModule"
  ],
  "identity.entitlement.policy_point.pdp.policy_store_module": "org.wso2.carbon.identity.entitlement.policy.store.RegistryPolicyStoreManageModule",
  "identity.entitlement.policy_point.pdp.policy_data_store_module": "org.wso2.carbon.identity.entitlement.policy.store.DefaultPolicyDataStore",
  "identity.entitlement.policy_point.pap.enabled": true,
  "identity.entitlement.policy_point.pap.policy_add_start_enable": true,
  "identity.entitlement.policy_point.pap.items_per_page": "10",
  "identity.entitlement.policy_point.pap.entitlement_data_finders": [
    "org.wso2.carbon.identity.entitlement.pap.CarbonEntitlementDataFinder"
  ],
  "identity.entitlement.policy_point.pap.policy_publisher_modules": [
    "org.wso2.carbon.identity.entitlement.policy.publisher.CarbonBasicPolicyPublisherModule"
  ],
  "identity.entitlement.policy_point.pap.policy_version_module": "org.wso2.carbon.identity.entitlement.policy.version.DefaultPolicyVersionManager",
  "identity.entitlement.policy_point.pap.status_data_handlers": [
    "org.wso2.carbon.identity.entitlement.SimplePAPStatusDataHandler"
  ],
  "identity.entitlement.policy_point.pip.attribute_designators": [
    "org.wso2.carbon.identity.entitlement.pip.DefaultAttributeFinder",
    "org.wso2.carbon.identity.application.authz.xacml.pip.AuthenticationContextAttributePIP"
  ],
  "identity.entitlement.policy_point.pip.resource_finders": [
    "org.wso2.carbon.identity.entitlement.pip.DefaultResourceFinder"
  ],
  "identity.entitlement.entitlement_engine_caching_interval": "100000",
  "identity.entitlement.JSON_shorten_form_enabled": false,



  "identity.events.thread_pool_size": "10",
  "identity.events.schemes.'account.lock.handler'.subscriptions": [
    "PRE_AUTHENTICATION",
    "POST_AUTHENTICATION",
    "PRE_SET_USER_CLAIMS",
    "POST_SET_USER_CLAIMS"
  ],
  "identity.events.schemes.'account.lock.handler'.properties.enable": false,
  "identity.events.schemes.'account.lock.handler'.properties.'login.fail.timeout.ratio'": "2",
  "identity.events.schemes.'account.lock.handler'.properties.'On.Failure.Max.Attempts'": "5",
  "identity.events.schemes.'account.lock.handler'.properties.Time": "5",
  "identity.events.schemes.'account.lock.handler'.properties.'notification.manageInternally'": true,
  "identity.events.schemes.emailSend.subscriptions": [
    "TRIGGER_NOTIFICATION"
  ],
  "identity.events.schemes.accountConfirmationValidation.subscriptions": [
    "PRE_AUTHENTICATION"
  ],
  "identity.events.schemes.passwordHistory.subscriptions": [
    "PRE_UPDATE_CREDENTIAL",
    "PRE_UPDATE_CREDENTIAL_BY_ADMIN",
    "POST_UPDATE_CREDENTIAL",
    "POST_UPDATE_CREDENTIAL_BY_ADMIN",
    "POST_ADD_USER",
    "POST_DELETE_USER"
  ],
  "identity.events.schemes.passwordHistory.properties.enable": false,
  "identity.events.schemes.passwordHistory.properties.count": "5",
  "identity.events.schemes.passwordHistory.properties.hashingAlgorithm": "SHA-256",
  "identity.events.schemes.passwordHistory.properties.dataStore": "org.wso2.carbon.identity.password.history.store.Impl.DefaultPasswordHistoryDataStore",
  "identity.events.schemes.'account.disable.handler'.subscriptions": [
    "PRE_AUTHENTICATION",
    "PRE_SET_USER_CLAIMS",
    "POST_SET_USER_CLAIMS"
  ],
  "identity.events.schemes.'account.disable.handler'.properties.enable": false,
  "identity.events.schemes.'account.disable.handler'.properties.'notification.manageInternally'": true,
  "identity.events.schemes.userSelfRegistration.subscriptions": [
    "POST_ADD_USER"
  ],
  "identity.events.schemes.userEmailVerification.subscriptions": [
    "PRE_ADD_USER",
    "POST_ADD_USER"
  ],
  "identity.events.schemes.passwordPolicy.subscriptions": [
    "PRE_UPDATE_CREDENTIAL",
    "PRE_UPDATE_CREDENTIAL_BY_ADMIN",
    "PRE_ADD_USER"
  ],
  "identity.events.schemes.passwordPolicy.properties.'min.length'": "6",
  "identity.events.schemes.passwordPolicy.properties.'max.length'": "12",
  "identity.events.schemes.passwordPolicy.properties.pattern": "^((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%&*])).{0,100}$",
  "identity.events.schemes.passwordPolicy.properties.errorMsg": "'Password pattern policy violated. Password should contain a digit[0-9], a lower case letter[a-z], an upper case letter[A-Z], and one of !@#$%&* characters'",
  "identity.events.schemes.passwordPolicy.properties.'class.PasswordLengthPolicy'": "org.wso2.carbon.identity.mgt.policy.password.DefaultPasswordLengthPolicy",
  "identity.events.schemes.passwordPolicy.properties.'class.PasswordNamePolicy'": "org.wso2.carbon.identity.mgt.policy.password.DefaultPasswordNamePolicy",
  "identity.events.schemes.passwordPolicy.properties.'class.PasswordPatternPolicy'": "org.wso2.carbon.identity.mgt.policy.password.DefaultPasswordPatternPolicy",
  "identity.events.schemes.passwordPolicy.properties.enable": false,
  "identity.events.schemes.adminForcedPasswordReset.subscriptions": [
    "PRE_SET_USER_CLAIMS",
    "PRE_AUTHENTICATION"
  ],
  "identity.events.schemes.'suspension.notification'.subscriptions": [
    "POST_AUTHENTICATION"
  ],
  "identity.events.schemes.'suspension.notification'.properties.enable": false,
  "identity.events.schemes.'suspension.notification'.properties.'account.disable.delay'": "90",
  "identity.events.schemes.'suspension.notification'.properties.'trigger.time'": "20:00:00",
  "identity.events.schemes.'suspension.notification'.properties.delays": "30,45,60,75",
  "identity.events.schemes.handleRequestObject.subscriptions": [
    "POST_REVOKE_ACESS_TOKEN",
    "POST_REVOKE_CODE",
    "POST_REVOKE_ACESS_TOKEN_BY_ID",
    "POST_REVOKE_CODE_BY_ID",
    "POST_REFRESH_TOKEN",
    "POST_ISSUE_CODE",
    "POST_ISSUE_ACCESS_TOKEN"
  ],
  "identity.events.schemes.'user.consent.delete'.subscriptions": [
    "POST_DELETE_USER"
  ],
  "identity.events.schemes.'user.consent.delete'.properties.'receipt.search.limit'": "500",
  "identity.events.schemes.authenticationAuditLogger.subscriptions": [
    "AUTHENTICATION_STEP_SUCCESS",
    "AUTHENTICATION_STEP_FAILURE",
    "AUTHENTICATION_SUCCESS",
    "AUTHENTICATION_FAILURE",
    "SESSION_TERMINATE"
  ],
  "identity.events.schemes.authenticationAuditLogger.properties.enable": true,
  "identity.events.schemes.analyticsLoginDataPublisher.subscriptions": [
    "AUTHENTICATION_STEP_SUCCESS",
    "AUTHENTICATION_STEP_FAILURE",
    "AUTHENTICATION_SUCCESS",
    "AUTHENTICATION_FAILURE"
  ],
  "identity.events.schemes.analyticsLoginDataPublisher.properties.enable": false,
  "identity.events.schemes.analyticsSessionDataPublisher.subscriptions": [
    "SESSION_CREATE",
    "SESSION_UPDATE",
    "SESSION_TERMINATE"
  ],
  "identity.events.schemes.analyticsSessionDataPublisher.properties.enable": false,
  "identity.events.schemes.failLoginAttemptValidator.subscriptions": [
    "AUTHENTICATION_STEP_FAILURE"
  ],
  "identity.events.schemes.failLoginAttemptValidator.properties.enable": true,
  "identity.events.schemes.SAMLLogoutHandler.subscriptions": [
    "SESSION_TERMINATE"
  ],
  "identity.events.schemes.SAMLLogoutHandler.properties.enable": true,
  "identity.events.schemes.OIDCLogoutHandler.subscriptions": [
    "SESSION_TERMINATE"
  ],
  "identity.events.schemes.OIDCLogoutHandler.properties.enable": false,
  "identity.events.schemes.confirmationCodesInvalidate.subscriptions": [
    "POST_DELETE_USER"
  ],



  "identity.datasource": "jdbc/WSO2CarbonDB",

  "identity.session_data_persist.enable": true,
  "identity.session_data_persist.temporary": true,
  "identity.session_data_persist.pool_size": "0",
  "identity.session_data_persist.session_data_cleanup.enable": true,
  "identity.session_data_persist.session_data_cleanup.cleanup_timeout": "20160",
  "identity.session_data_persist.session_data_cleanup.cleanup_period": "1440",
  "identity.session_data_persist.session_data_cleanup.delete_chunk_size": "50000",
  "identity.session_data_persist.operation_data_cleanup.enable": true,
  "identity.session_data_persist.temp_data_cleanup.enable": true,
  "identity.session_data_persist.temp_data_cleanup.pool_size": "20",
  "identity.session_data_persist.temp_data_cleanup.cleanup_timeout": "40",

  "identity.time_config.session_idle_timeout": "15",
  "identity.time_config.remember_me_timeout": "20160",

  "identity.security.keystore_directory_path": "${carbon.home}/conf/keystores",
  "identity.security.key_manager_type": "$conf{keystore.tls.type}",
  "identity.security.trust_manager_type": "$conf{truststore.type}",

  "identity.issuer_policy": "SelfAndManaged",
  "identity.token_validation_policy": "CertValidate",

  "OpenID.server_url": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/openidserver",
  "OpenID.user_pattern": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/openid",
  "OpenID.login_url": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/authenticationendpoint/openid_login.do",
  "OpenID.skip_user_consent": false,
  "OpenID.remember_me_expiry": "7200",
  "OpenID.disable_dumb_mode": false,

  "OAuth.enable_token_cleanup": true,
  "OAuth.retain_old_access_token": true,
  "OAuth.use_entityId_as_issuer_in_OIDC_discovery": true,
  "OAuth.authorization_code_default_validity_period": "300",
  "OAuth.application_access_token_default_validity_period": "3600",
  "OAuth.user_access_token_default_validity_period": "3600",
  "OAuth.refresh_token_validity_Period": "84600",
  "OAuth.timestamp_skew": "0",
  "OAuth.renew_refresh_token_for_refresh_grant": true,
  "OAuth.token_persistence_processor": "org.wso2.carbon.identity.oauth.tokenprocessor.PlainTextPersistenceProcessor",
  "OAuth.enable_client_secret_hash": false,
  "OAuth.map_federated_users_to_local": false,

  "OAuth.OAuth1.request_token.url": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/oauth/request-token",
  "OAuth.OAuth1.authorize_url": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/oauth/authorize-url",
  "OAuth.OAuth1.access_token_url": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/oauth/access-token",

  "OAuth.OAuth2.authz_endpoint_url": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/oauth2/authorize",
  "OAuth.OAuth2.token_endpoint_url": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/oauth2/token",
  "OAuth.OAuth2.revoke_endpoint_url": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/oauth2/revoke",
  "OAuth.OAuth2.introspect_endpoint_url": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/oauth2/introspect",
  "OAuth.OAuth2.userinfo_endpoint_url": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/oauth2/userinfo",
  "OAuth.OAuth2.consent_page": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/authenticationendpoint/oauth2_authz.do",
  "OAuth.OAuth2.error_page": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/authenticationendpoint/oauth2_error.do",
  "OAuth.OAuth2.dcr_endpoint_url": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/api/identity/oauth2/dcr/v1.1/register",
  "OAuth.OAuth2.jwks_page": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/oauth2/jwks",

  "OAuth.OIDC.check_session_endpoint_url": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/oidc/checksession",
  "OAuth.OIDC.logout_endpoint_url": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/oidc/logout",
  "OAuth.OIDC.consent_page": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/authenticationendpoint/oauth2_consent.do",
  "OAuth.OIDC.logout_consent_page":"${carbon.protocol}://${carbon.host}:${carbon.management.port}/authenticationendpoint/oauth2_logout_consent.do",
  "OAuth.OIDC.logout_page": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/authenticationendpoint/oauth2_logout.do",
  "OAuth.OIDC.webfinger_endpoint_url": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/.well-known/webfinger",
  "OAuth.OIDC.discovery_endpoint_url": "${carbon.protocol}://${carbon.host}:${carbon.management.port}/oauth2/oidcdiscovery",

  "OAuth.supported_response_types": ["token","code","id_token","id_token token"],
  "OAuth.supported_response_type.token.ResponseTypeHandlerImplClass": "org.wso2.carbon.identity.oauth2.authz.handlers.AccessTokenResponseTypeHandler",
  "OAuth.supported_response_type.code.ResponseTypeHandlerImplClass": "org.wso2.carbon.identity.oauth2.authz.handlers.CodeResponseTypeHandler",
  "OAuth.supported_response_type.id_token.ResponseTypeHandlerImplClass": "org.wso2.carbon.identity.oauth2.authz.handlers.IDTokenResponseTypeHandler",
  "OAuth.supported_response_type.id_token token.ResponseTypeHandlerImplClass": "org.wso2.carbon.identity.oauth2.authz.handlers.IDTokenTokenResponseTypeHandler",
  "OAuth.supported_grant_types": [
    "authorization_code",
    "password",
    "refresh_token",
    "client_credentials",
    "urn:ietf:params:oauth:grant-type:saml2-bearer",
    "iwa:ntlm",
    "urn:ietf:params:oauth:grant-type:jwt-bearer",
    "urn:ietf:params:oauth:grant-type:uma-ticket"
  ],
  "OAuth.supported_grant_type.authorization_code.GrantTypeHandlerImplClass": "org.wso2.carbon.identity.oauth2.token.handlers.grant.AuthorizationCodeGrantHandle",
  "OAuth.supported_grant_type.password.GrantTypeHandlerImplClass": "org.wso2.carbon.identity.oauth2.token.handlers.grant.PasswordGrantHandler",
  "OAuth.supported_grant_type.refresh_token.GrantTypeHandlerImplClass": "org.wso2.carbon.identity.oauth2.token.handlers.grant.RefreshGrantHandler",
  "OAuth.supported_grant_type.client_credentials.GrantTypeHandlerImplClass": "org.wso2.carbon.identity.oauth2.token.handlers.grant.ClientCredentialsGrantHandler",
  "OAuth.supported_grant_type.client_credentials.IsRefreshTokenAllowed": false,
  "OAuth.supported_grant_type.client_credentials.IdTokenAllowed": false,
  "OAuth.supported_grant_type.urn:ietf:params:oauth:grant-type:saml2-bearer.GrantTypeHandlerImplClass": "org.wso2.carbon.identity.oauth2.token.handlers.grant.saml.SAML2BearerGrantHandler",
  "OAuth.supported_grant_type.iwa:ntlm.GrantTypeHandlerImplClass": "org.wso2.carbon.identity.oauth2.token.handlers.grant.iwa.ntlm.NTLMAuthenticationGrantHandler",
  "OAuth.supported_grant_type.urn:ietf:params:oauth:grant-type:jwt-bearer.GrantTypeHandlerImplClass": "org.wso2.carbon.identity.oauth2.grant.jwt.JWTBearerGrantHandler",
  "OAuth.supported_grant_type.urn:ietf:params:oauth:grant-type:jwt-bearer.GrantTypeValidatorImplClass": "org.wso2.carbon.identity.oauth2.grant.jwt.JWTGrantValidator",
  "OAuth.supported_grant_type.urn:ietf:params:oauth:grant-type:uma-ticket.GrantTypeHandlerImplClass": "org.wso2.carbon.identity.oauth.uma.grant.UMA2GrantHandler",
  "OAuth.supported_grant_type.urn:ietf:params:oauth:grant-type:uma-ticket.GrantTypeValidatorImplClass": "org.wso2.carbon.identity.oauth.uma.grant.GrantValidator",

  "OAuth.user_consent_enable_grant_types": [
    "authorization_code",
    "implicit"
  ],

  "OAuth.callback_handlers": [
    "org.wso2.carbon.identity.oauth.callback.DefaultCallbackHandler"
  ],

  "OAuth.token_validators": [
    {
      "type": "bearer",
      "class": "org.wso2.carbon.identity.oauth2.validators.DefaultOAuth2TokenValidator"
    },
    {
      "type": "jwt",
      "class": "org.wso2.carbon.identity.oauth2.validators.OAuth2JWTTokenValidator"
    }
  ],

  "OAuth.scope_validators": [
    "org.wso2.carbon.identity.oauth2.validators.JDBCScopeValidator",
    "org.wso2.carbon.identity.oauth2.validators.xacml.XACMLScopeValidator"
  ],

  "OAuth.scope_handlers": [
    "org.wso2.carbon.identity.oauth2.validators.OIDCScopeHandler"
  ],

  "OAuth.enable_assertions.UserName": false,
  "OAuth.enable_access_token_partitioning": false


}
